services:
  backend:
    build: ./backend
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    environment:
      POSTGRES_DSN: ${POSTGRES_DSN}
      BACKEND_PORT: ${BACKEND_PORT}
      SALT: ${SALT}
      SIGNING_KEY: ${SIGNING_KEY}
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build: ./frontend
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    depends_on:
      backend:
        condition: service_started

  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  nocodb:
    image: nocodb/nocodb:latest
    restart: always
    ports: 
      - "${NOCODB_PORT}:${NOCODB_PORT}"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - "nocodb_data:/usr/app/data"

volumes:
  postgres_data: {}
  nocodb_data: {}