basePath: /
definitions:
  controller.signInInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  controller.statusResponse:
    properties:
      status:
        type: string
    type: object
  models.Flower:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      stock:
        type: integer
    required:
    - name
    - price
    - stock
    type: object
  models.UpdateDescriptionInput:
    properties:
      new_description:
        type: string
    required:
    - new_description
    type: object
  models.UpdateNameInput:
    properties:
      new_name:
        type: string
    required:
    - new_name
    type: object
  models.UpdatePasswordInput:
    properties:
      new_password:
        type: string
      old_password:
        type: string
      username:
        type: string
    required:
    - new_password
    - old_password
    - username
    type: object
  models.UpdatePriceInput:
    properties:
      new_price:
        type: number
    required:
    - new_price
    type: object
  models.UpdateStockInput:
    properties:
      new_stock:
        type: integer
    required:
    - new_stock
    type: object
  models.UpdateUsernameInput:
    properties:
      new_username:
        type: string
      old_username:
        type: string
    required:
    - new_username
    - old_username
    type: object
  models.User:
    properties:
      email:
        description: Email пользователя
        type: string
      id:
        description: ID пользователя
        type: integer
      password:
        description: Пароль пользователя
        type: string
      username:
        description: Имя пользователя
        type: string
    required:
    - email
    - password
    - username
    type: object
host: localhost:8080
info:
  contact: {}
  description: API server for flower's shop 'Bloomify'
  title: Bloomify API
  version: "3.0"
paths:
  /api/flowers:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all flowers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Flower'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all flowers
      tags:
      - flowers
    post:
      consumes:
      - application/json
      description: Add a new flower to the database
      parameters:
      - description: Flower data
        in: body
        name: flower
        required: true
        schema:
          $ref: '#/definitions/models.Flower'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: integer
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new flower
      tags:
      - flowers
  /api/flowers/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a flower by its ID
      parameters:
      - description: Flower ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a flower by ID
      tags:
      - flowers
    get:
      consumes:
      - application/json
      description: Retrieve a flower by its ID
      parameters:
      - description: Flower ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Flower'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get flower by ID
      tags:
      - flowers
  /api/flowers/price:
    get:
      consumes:
      - application/json
      description: Retrieve a list of flowers with prices less than or equal to the
        specified value
      parameters:
      - description: Max Price
        in: query
        name: price
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Flower'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Search flowers by price
      tags:
      - flowers
  /api/flowers/search:
    get:
      consumes:
      - application/json
      description: Retrieve a list of flowers by their name
      parameters:
      - description: Flower Name
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Flower'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Search flowers by name
      tags:
      - flowers
  /api/flowers/stock:
    get:
      consumes:
      - application/json
      description: Retrieve a list of flowers with stock levels less than or equal
        to the specified value
      parameters:
      - description: Max Stock
        in: query
        name: stock
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Flower'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Search flowers by stock
      tags:
      - flowers
  /api/users:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all users
      tags:
      - users
  /api/users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a user by ID
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Retrieve a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user by ID
      tags:
      - users
  /api/users/{id}/password:
    patch:
      consumes:
      - application/json
      description: Update the password of a specific user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Password Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePasswordInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.statusResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update user's password
      tags:
      - users
  /api/users/{id}/username:
    patch:
      consumes:
      - application/json
      description: Update the username of a specific user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Username Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUsernameInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.statusResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update user's username
      tags:
      - users
  /api/v1/flowers/{id}/description:
    patch:
      consumes:
      - application/json
      description: Update the description of a specific flower by its ID
      parameters:
      - description: Flower ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Flower Description Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UpdateDescriptionInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.statusResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update flower's description
      tags:
      - flowers
  /api/v1/flowers/{id}/name:
    patch:
      consumes:
      - application/json
      description: Update the name of a specific flower by its ID
      parameters:
      - description: Flower ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Flower Name Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UpdateNameInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.statusResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update flower's name
      tags:
      - flowers
  /api/v1/flowers/{id}/price:
    patch:
      consumes:
      - application/json
      description: Update the price of a specific flower by its ID
      parameters:
      - description: Flower ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Flower Price Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePriceInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.statusResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update flower's price
      tags:
      - flowers
  /api/v1/flowers/{id}/stock:
    patch:
      consumes:
      - application/json
      description: Update the stock level of a specific flower by its ID
      parameters:
      - description: Flower ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Flower Stock Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UpdateStockInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.statusResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update flower's stock
      tags:
      - flowers
  /api/v1/flowers/search/description:
    get:
      consumes:
      - application/json
      description: Retrieve a list of flowers by their description
      parameters:
      - description: Flower Description
        in: query
        name: description
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Flower'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Search flowers by description
      tags:
      - flowers
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: Authenticate an existing user and return JWT token
      parameters:
      - description: Sign in data
        in: body
        name: signInInput
        required: true
        schema:
          $ref: '#/definitions/controller.signInInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Sign in an existing user
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: Create a new user account
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: integer
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - auth
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
